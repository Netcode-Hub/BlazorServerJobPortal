@page "/login"
@inject IJSRuntime js
@inject IClientService service
@inject NavigationManager navigateMgr
<PageTitle>Login</PageTitle>

<div class="card mt-2 border-1 shadow-lg">
    <div class="card border-1 shadow-lg" style=" background-image: linear-gradient(to right, #947FFF, #F875B3);">
        <div class="card border-1 shadow-lg" style=" background-image: linear-gradient(to right, #947FFF, #F875B3);">
            <div class="card mt-1 border-1 shadow-lg" style=" background-image: linear-gradient(to right, #947FFF, #F875B3);">
                <div class="card border-1 shadow-lg">
                    <div class="card border-1 shadow-lg">
                        <div class="card-header"><h4>Login An Account</h4></div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-xl-3"></div>
                                <div class=" col-xl-6 col-md-4 col-sm-12">
                                    <div class="card border-1 shadow-lg">
                                        <div class="card-header">Provide details to login</div>
                                        <div class="card-body">
                                            <EditForm Model="LoginModel" OnValidSubmit="HandleLoginOperation">
                                                <DataAnnotationsValidator />
                                                <ValidationSummary />
                                                <div class="form-group">
                                                    <SfTextBox Enabled="true" Placeholder="Email Address" FloatLabelType="FloatLabelType.Auto" ValidateOnInput="true" @bind-Value="LoginModel.Email" Type="InputType.Text" ShowClearButton="true"></SfTextBox>
                                                    <ValidationMessage For="()=>LoginModel.Email" />
                                                </div>
                                                <div class="form-group">
                                                    <SfTextBox Enabled="true" Placeholder="Password" FloatLabelType="FloatLabelType.Auto" @bind-Value="LoginModel.Password" ShowClearButton="true" ValidateOnInput="true" Type="InputType.Password"></SfTextBox>
                                                    <ValidationMessage For="()=>LoginModel.Password" />
                                                </div>
                                                <div class="form-group mt-4">
                                                    <button type="submit" class="btn btn-success float-end">Login</button>
                                                </div>
                                            </EditForm>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationState { get; set; }
    private Login LoginModel { get; set; } = new();

    private async Task HandleLoginOperation()
    {
        var (flag, message) = await service.LoginUserAsync(LoginModel);
        if (flag)
            navigateMgr.NavigateTo("/", true);
        else
            await js.InvokeVoidAsync("alert", message); return;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        if (authState!.User!.Identity!.IsAuthenticated)
            navigateMgr.NavigateTo("/");
    }
}
